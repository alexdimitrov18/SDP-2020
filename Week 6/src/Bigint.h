#pragma once						///Препроцесорна директива която не позволява този файл да се копира повече от един път в един файл

#include <ostream>

typedef unsigned short int ushort;  ///Преименуваме 'unsigned short int' на 'ushort'


/**
	Примерна имплентация на клас, който позволява боравенето 
	на по-големи цели числа от вградените типове на C++.

	Числото се репрезентира в масив, като всеки елемент в масива 
	е цифра, където индекса на елемента отговаря на степента на 
	десетичната бройна система:

	193 = 1*10^2 + 9*10^1 + 3*10^0

	Следователно ако разглеждаме масива като растяща редица от индекси
	то числото 193 ще е записано като 391. Това ще ни улесни сметките с 
	прехвърлянията при сбора на две цифри.
*/
class Bigint
{
	ushort *ptr;				///Указателя, който ще държи адреса на динамичо заделения масив 
	unsigned int size,			///Размера на масива
				 used;          ///Текущо използвания размер от масива

	void copy(const Bigint&);   ///Фунцкия, която копира стойностите на подадения обект (deepcopy)
	void resize();              ///Фунцкия, която увеличава размера на масива **
	void rev();					///Фунцкия, която обърща елементите в масива

public:
	///Голямата четворка!
	Bigint();								///Конструктор по подаразбиране
	Bigint(const Bigint&);					///Копиращ конструктор
	const Bigint& operator=(const Bigint&); ///Предефиниране на оператор равно
	~Bigint() { delete ptr; }               ///Деструктор

	///Допълнителни предефинирани оператори, които ще ни служат за тестване на класа
	Bigint operator+(const Bigint&);
	friend std::istream& operator>>(std::istream& os, Bigint& obj);
	friend std::ostream& operator<<(std::ostream& os, Bigint obj);
};

